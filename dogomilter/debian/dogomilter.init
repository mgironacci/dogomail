#! /bin/sh
#
# dogomilter	Milter for Dogomail
#		by M. Andres Gironacci <mgironacci@itecnis.com>
#
### BEGIN INIT INFO
# Provides:          dogomilter
# Required-Start:    $remote_fs $syslog $network $time
# Required-Stop:     $remote_fs $syslog $network
# Should-Start:
# Should-Stop:
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: dogomilter
# Description:       Python Dogomail Milter
### END INIT INFO
prefix="/usr"
exec_prefix=${prefix}
sysconfdir="/etc/dogomail"
bindir="${exec_prefix}/bin/"
RUNDIR="/var/run/dogomail"
DAEMON=${bindir}/dogomilter
PATH=/sbin:/bin:/usr/sbin:/usr/bin:
NAME=dogomilter
DESC="Python Dogomail Milter"
USER=dogomail
GROUP=dogomail
SOCKET=$RUNDIR/dogomilter.sock

test -x $DAEMON || exit 0

# Include dogomilter defaults if available
if [ -f /etc/default/dogomilter ] ; then
	. /etc/default/dogomilter
fi

set -e

. /lib/lsb/init-functions

case "$1" in
  start)
	echo -n "Starting $DESC: "
	# Create the run directory if it doesn't exist
	if [ ! -d $RUNDIR ]; then
		install -o $USER -g $GROUP -m 755 -d $RUNDIR || return 2
	fi

	# Clean up stale sockets
	if [ -f $RUNDIR/$NAME.pid ]; then
		pid=`cat $RUNDIR/$NAME.pid`
		if ! ps -C $DAEMON -s $pid >/dev/null; then
			rm $RUNDIR/$NAME.pid
			# UNIX sockets may be specified with or without the
			# local: prefix; handle both
			t=`echo $SOCKET | cut -d: -f1`
			s=`echo $SOCKET | cut -d: -f2`
			if [ -e $s -a -S $s ]; then
				if [ "$t" = "$s" -o "$t" = "local" ]; then
					rm $s
				fi
			fi
		fi
	fi

	start-stop-daemon --start --chuid $USER --background --quiet --pidfile $RUNDIR/$NAME.pid --exec $DAEMON
	echo "$NAME."
	;;
  stop)
	echo -n "Stopping $DESC: "
	if [ -f $RUNDIR/$NAME.pid ]; then
		start-stop-daemon --stop --pidfile $RUNDIR/$NAME.pid 
		rm $RUNDIR/$NAME.pid
		if [ -e $SOCKET ]; then
			rm $SOCKET
		fi
	fi
	echo "$NAME."
	;;
  force-reload)
        echo -n "Force reloading $DESC: "
        if [ -f $RUNDIR/$NAME.pid ]; then
                start-stop-daemon --stop --pidfile $RUNDIR/$NAME.pid
                rm $RUNDIR/$NAME.pid
                if [ -e $SOCKET ]; then
                        rm $SOCKET
                fi
        fi
        sleep 1
        start-stop-daemon --start --chuid $USER --background --quiet --pidfile $RUNDIR/$NAME.pid --exec $DAEMON
        echo "$NAME."
        ;;
  restart)
        echo "Restarting $DESC: "
        echo -n "Stopping $DESC: "
        if [ -f $RUNDIR/$NAME.pid ]; then
                start-stop-daemon --stop --pidfile $RUNDIR/$NAME.pid
                rm $RUNDIR/$NAME.pid
                #echo $SOCKET
                if [ -e $SOCKET ]; then
                        rm $SOCKET
                fi
        fi
        echo "$NAME."
	sleep 1
        echo -n "Starting $DESC: "
        start-stop-daemon --start --chuid $USER --background --quiet --pidfile \
                $RUNDIR/$NAME.pid --exec $DAEMON
        echo "$NAME."
	;;

  *)
	N=/etc/init.d/$NAME
	echo "Usage: $N {start|stop|force-reload|restart|}" >&2
	exit 1
	;;
esac

exit 0
