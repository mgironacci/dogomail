"""
Django settings for dogoweb project.

Generated by 'django-admin startproject' using Django 2.0.

For more information on this file, see
https://docs.djangoproject.com/en/2.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.0/ref/settings/
"""

import os
import configparser

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))

cl = open(BASE_DIR+'/../CHANGELOG.md')
cl.readline()
VERSION = cl.readline().split(" ")[1].replace("[", "").replace("]", "")
cl.close()

# Leer configuracion del entorno local
allconf = configparser.ConfigParser()
allconf.read(BASE_DIR+'/entorno.ini')
config = allconf['DEFAULT']

# Entorno actual
ENTORNO = config.get('ENTORNO', 'dev')

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = config.get('SECRET_KEY', None, raw=True)

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = config.getboolean('DEBUG', False)

ALLOWED_HOSTS = []
if config.get('SITE_NAME', None):
    ALLOWED_HOSTS = [config.get('SITE_NAME')]

LOGIN_URL = config.get('LOGIN_URL')
LOGOUT_URL = config.get('LOGOUT_URL')
LOGIN_REDIRECT_URL = config.get('LOGIN_REDIRECT_URL')
LOGOUT_REDIRECT_URL = config.get('LOGOUT_REDIRECT_URL')

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'seg',
    'mail',
    'stats',
    'erp',
    'spam',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'dogoweb.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'dogoweb.wsgi.application'


# Database
# https://docs.djangoproject.com/en/2.0/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': config.get('DB_ENGINE'),
        'NAME': config.get('DB_NAME'),
        'USER': config.get('DB_USER'),
        'PASSWORD': config.get('DB_PASSWORD'),
        'HOST': config.get('DB_HOST'),
        'PORT': config.get('DB_PORT'),

        'ENGINE': 'django.db.backends.mysql',
        'NAME': 'dogomail_2',
        'USER': 'root',
        'PASSWORD': 'x',
        'HOST': '127.0.0.1',
        'PORT': '3306',
    }
}


# Password validation
# https://docs.djangoproject.com/en/2.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/2.0/topics/i18n/

LANGUAGE_CODE = config.get('LANGUAGE_CODE')

TIME_ZONE = config.get('TIME_ZONE')

USE_I18N = True

USE_L10N = True

USE_TZ = True

LOCALE_PATHS = [
    os.path.join(BASE_DIR, "dogoweb", "locale"),
]

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.0/howto/static-files/

STATIC_URL = config.get('STATIC_URL', '/static/')

STATIC_ROOT = config.get('STATIC_ROOT', None)

STATICFILES_DIRS = [
    os.path.join(BASE_DIR, "dogoweb", "static"),
]
